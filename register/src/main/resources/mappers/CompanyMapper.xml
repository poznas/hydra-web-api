<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.agh.hydra.register.dao.CompanyRepository">

    <resultMap id="CompanyResultMap" type="com.agh.hydra.register.entity.CompanyEntity">
        <id column="company_id" property="companyId" />
        <result column="name" property="companyName" />
        <result column="address" property="address" />
        <result column="active" property="active" />
        <result column="official_language" property="language" />
    </resultMap>

    <sql id="selectColumns">
        company_id,
        name,
        address,
        case when active = 'Y' then 1 else 0 end as active,
        official_language
    </sql>


    <select id="findCompanyByIds" resultMap="CompanyResultMap">
        select
        <include refid="selectColumns"/>
        from hydra.company WHERE company_id in
        <foreach collection="companyIds" item="companyId" index="index" open="(" separator="," close=")">
            #{companyId}
        </foreach>
    </select>

    <select id="getCompaniesPageByIds" resultMap="CompanyResultMap">
        select
        <include refid="selectColumns"/>
        from hydra.company
          where active = 'Y'
        <if test="companyIds != null and !companyIds.isEmpty()">
             and company_id in
            <foreach collection="companyIds" item="companyId" index="index" open="(" separator="," close=")">
                #{companyId}
            </foreach>
        </if>
        offset #{offset}
        limit #{pageSize}
    </select>

    <select id="getCompaniesCount" resultType="long">
        select count(*) from hydra.company
          where active = 'Y'
        <if test="companyIds != null and !companyIds.isEmpty()">
            and company_id in
            <foreach collection="companyIds" item="companyId" index="index" open="(" separator="," close=")">
                #{companyId}
            </foreach>
        </if>
    </select>

    <update id="invalidateCompanies" parameterType="String">
        update hydra.company set
            active = 'N'
        where company_id in
        <foreach collection="companyIds" item="companyId" index="index" open="(" separator="," close=")">
            #{companyId}
        </foreach>
    </update>

    <update id="updateCompany" parameterType="com.agh.hydra.register.entity.CompanyEntity">
       update hydra.company set
              name = #{companyName},
              address = #{address},
              <if test="active != null">
                  active = case when #{active} then 'Y' else 'N' end,
              </if>
              official_language = #{language}
          where company_id = #{companyId};

       insert into hydra.company (company_id,
                                  name,
                                  address,
        <if test="active != null">active,</if>
                                  official_language)
              select  #{companyId},
                      #{companyName},
                      #{address},
        <if test="active != null">case when #{active} then 'Y' else 'N' end as active,</if>
                      #{language}
              where not exists (select 1 from hydra.company where company_id = #{companyId});
     </update>

    <insert id="createCompany" parameterType="com.agh.hydra.register.entity.CompanyEntity">
        insert into hydra.company (name, address, official_language)
          select #{companyName}, #{address}, #{language}
    </insert>
</mapper>